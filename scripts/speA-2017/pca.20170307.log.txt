# 2017-03-07
barrantes-imac:pancreas-2017-03-01 barrantes$ cd ~/anshu/
barrantes-imac:anshu barrantes$ cd temp/
barrantes-imac:temp barrantes$ scp barrantes@ghanima:~/projects/anshu-2017-01-31/*_expression_counts .
barrantes-imac:temp barrantes$ pwd
/Users/barrantes/anshu/temp
barrantes-imac:temp barrantes$ rename 's/counts/counts.tsv/' *counts
# then R history: pca.20170307.R



##### NOTES
# set01_expression_counts.tsv    set02_expression_counts.tsv

setwd("/Users/barrantes/anshu/temp")

exprTable <- read.csv("set02_expression_counts.tsv", header=TRUE, sep="\t")
counts <- exprTable[,c(1,3:11)]
rownames(counts) <- counts[,c("target_id")]
counts[,c("target_id")] <- NULL
minCount <- 2700
countsAboveThr <- subset(counts, rowSums(counts[,c(1:9)]) > minCount)
samples <- data.frame(row.names=c("A1", "A2", "A3", "C1", "C2", "C3", "P1", "P2", "P3"), condition=as.factor(c(rep("A",3),rep("C",3),rep("P",3))))
bckCDS2 <- DESeqDataSetFromMatrix(countData = countsAboveThr, colData=samples, design=~condition)
bckCDS2_1 <- DESeq(bckCDS2)



library(DESeq2, quietly = TRUE)
exprTable <- read.csv("set01_expression_counts.tsv", header=TRUE, sep="\t")
counts <- exprTable[,c(1,3:11)]
rownames(counts) <- counts[,c("target_id")]
counts[,c("target_id")] <- NULL
minCount <- 2700
countsAboveThr <- subset(counts, rowSums(counts[,c(1:9)]) > minCount)
samples <- data.frame(row.names=c("A1", "A2", "A3", "C1", "C2", "C3", "P1", "P2", "P3"), condition=as.factor(c(rep("A",3),rep("C",3),rep("P",3))))
bckCDS2 <- DESeqDataSetFromMatrix(countData = countsAboveThr, colData=samples, design=~condition)
bckCDS2_1 <- DESeq(bckCDS2)
# dds <- DESeq(dds)
# res <- results(dds)
rld <- rlog(bckCDS2_1, blind=FALSE)
plotPCA(rld, intgroup=c("condition", "type"))

pdf("set02.PCA.20170307.pdf")
print(p)
dev.off()



library(ggplot2)
p <- plotPCA(vsd)
p <- p + geom_text(aes_string(x = "PC1", y = "PC2", label = "name"), color = "black")

p <- p + geom_text(aes_string(x = "PC1", y = "PC2", label = "name"), color = "black")
print(p)






library(DESeq2, quietly = TRUE)

exprTable <- read.csv("infile", header=TRUE, sep="\t")
counts <- exprTable[,c(1,3:11)]
rownames(counts) <- counts[,c("target_id")]
counts[,c("target_id")] <- NULL
minCount <- 2700
countsAboveThr <- subset(counts, rowSums(counts[,c(1:9)]) > minCount)

samples <- data.frame(row.names=c("A1", "A2", "A3", "C1", "C2", "C3", "P1", "P2", "P3"), condition=as.factor(c(rep("A",3),rep("C",3),rep("P",3))))
bckCDS2 <- DESeqDataSetFromMatrix(countData = countsAboveThr, colData=samples, design=~condition)
bckCDS2_1 <- DESeq(bckCDS2)


￼￼￼￼￼
￼dds <- DESeq(dds)
res <- results(dds)
# Extracting transformed values
# DESeq2 manual, p.24
rld <- rlog(dds, blind=FALSE)

# Heatmap of the sample-to-sample distances
# DESeq2 manual, p.27
library("pheatmap")
library("RColorBrewer")
sampleDists <- dist(t(assay(rld)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(rld$condition, rld$type, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,          clustering_distance_rows=sampleDists,         clustering_distance_cols=sampleDists,         col=colors)

# Principal component plot of the samples
# DESeq2 manual, p.28
￼plotPCA(rld, intgroup=c("condition", "type"))